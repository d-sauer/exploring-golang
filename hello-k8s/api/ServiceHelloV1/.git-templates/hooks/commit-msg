#!/usr/bin/env bash

# create a regex for a conventional commit
convetional_commit_regex="^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\([a-z \-]+\))?!?: .+$"

# get the commit message (the parameter we're given is just the path to the
# temporary file which holds the message)
commit_message="$(cat "${1}")"

[[ "${commit_message}" =~ [A-Z]+-[0-9]+.* ]] || {
	echo >&2 "ERROR: Commit message requires JIRA key. Example: \"fix(example): add example data PRJ-123\""
	exit 1
}

# check if message contain breaking changes
[[ ! "${commit_message}" =~ (BREAKING CHANGE) ]] || {
	echo >&2 "ERROR: Breaking changes are not allowed. Create a new project instead!"
	exit 1
}

# check if message contain breaking changes
[[ ! "${commit_message}" =~ (!:?) ]] || {
	echo >&2 "ERROR: Breaking changes are not allowed. Create a new project instead!"
	exit 1
}

# check the message match conventional commit
if [[ "${commit_message}" =~ ${convetional_commit_regex} ]]; then
	echo -e "Commit message meets Conventional Commit standards..."
	exit 0
fi

# not a conventional commit, show an example and link to the spec
echo -e "The commit message does not meet the Conventional Commit standard!"
echo "An example of a valid message is: "
echo "  feat(login): add the 'remember me' button"
echo "More details at: https://www.conventionalcommits.org/en/v1.0.0/#summary"
exit 1
